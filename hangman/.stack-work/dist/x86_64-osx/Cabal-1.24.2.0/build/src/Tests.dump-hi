
==================== FINAL INTERFACE ====================
2017-12-16 01:17:28.468636 UTC

interface hangman-0.1.0.0-ou6S4UrYm4DGSzhNnfCda:Tests [orphan module] 8002
  interface hash: d133b578fd6ea5696d192a4e36d007b4
  ABI hash: 27cda3555793067ffa671d3357847cf3
  export-list hash: e666ef8b02282d2c748a5ceaf9c0f3cf
  orphan hash: 537af2d37f6190ace86d7fd72a737cd9
  flag hash: f6624f22fcdd76ed0ac6625466e2d712
  sig of: Nothing
  used TH splices: False
  where
exports:
  Tests.admissibleStringGen
  Tests.puzzleGen
  Tests.test
module dependencies: Main
package dependencies: HUnit-1.5.0.0@HUnit-1.5.0.0-DvjF79OHhCC7SzfeEty4OI
                      QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu
                      ansi-terminal-0.6.3.1@ansi-terminal-0.6.3.1-3RTqikoQf47ajVD9m8zgB
                      array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      call-stack-0.1.0@call-stack-0.1.0-FYVrCPXGP9EGAuTW32963O
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj
                      hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E
                      hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd
                      integer-gmp-1.0.0.1 pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh
                      quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      setenv-0.1.1.3@setenv-0.1.1.3-8dEhk6JWvlmCmVyBammSpu
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      template-haskell-2.11.1.0
                      tf-random-0.5@tf-random-0.5-CJZw1ZWS5MOJlR60HqKEZL
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      unix-2.7.2.1@unix-2.7.2.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         quickcheck-io-0.2.0@quickcheck-io-0.2.0-4pLO1WRxoBW9gt8EnME0zS:Test.QuickCheck.IO
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Example
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.2.0@primitive-0.6.2.0-4578caNkWQ54Gt1mxLF2Yh:Control.Monad.Primitive
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck 7a1791e2e66f06ce3b95a443f0d4b1ed
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck.Arbitrary 7186418da62e356916f17711482dca2f
import  -/  QuickCheck-2.9.2@QuickCheck-2.9.2-LvlomhGMxrFBkX1zwiWpQu:Test.QuickCheck.Gen 8c21a18006b7ca28eeb63c6653bc55ab
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  Main 45fe3787afcc157e615713c9a918f92b
  exports: 1b65e55dc86475ec3be952576d7340ac
  Puzzle 8b45591c9872630ddbd2fc7bc76f901a
  Puzzle c9815678108e1076b7e815af995d1ad7
  fillInCharacter f3d7fb8b6a0b274b37b34ecb7d1a0da2
import  -/  hspec-2.4.4@hspec-2.4.4-Ct0Af2AzisB8bPqGMHHFvj:Test.Hspec 04ea8eba4a0731a497f82df2f1be76d5
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Runner c79a89c5a9ba4275f04053dfa6118e70
import  -/  hspec-core-2.4.4@hspec-core-2.4.4-Ezb0jq4rRfBJWZtpolvs1E:Test.Hspec.Core.Spec 4de3fc7b2286a4370366c92ba3ff97ab
import  -/  hspec-expectations-0.8.2@hspec-expectations-0.8.2-DujBeQFEMmfJJRLad7XQgd:Test.Hspec.Expectations 29d4e6711b7d6d8a68fed679467f46e6
e350483f1b68ab6a2ddc17664899caea
  $fArbitraryPuzzle ::
    Test.QuickCheck.Arbitrary.Arbitrary Main.Puzzle
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Puzzle
                  Tests.puzzleGen
                  Tests.$fArbitraryPuzzle_$s$dmshrink -}
f88191390755bfbbd7ee6c408d7e6ac6
  $fArbitraryPuzzle_$s$dmshrink :: Main.Puzzle -> [Main.Puzzle]
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ (ds1 :: Main.Puzzle) -> GHC.Types.[] @ Main.Puzzle) -}
02284ceb004bdbcbdefe3dd4d4f3fc42
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Tests.$trModule2 Tests.$trModule1) -}
fbdd6238ed36e83840d55e754844c95b
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Tests"#) -}
0679c7c30dd8403d0a36731c784d5edd
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "hangman-0.1.0.0-ou6S4UrYm4DGSzhNnfCda"#) -}
d3dea9afaf8c95632dcc4d048bfef396
  admissibleStringGen :: Test.QuickCheck.Gen.Gen GHC.Base.String
  {- Arity: 2,
     Unfolding: InlineRule (0, True, True)
                Tests.admissibleStringGen1
                  `cast`
                (Sym (Test.QuickCheck.Gen.N:Gen[0] <[GHC.Types.Char]>_R)) -}
34ab33a273c9abb6d519c85b6a469924
  admissibleStringGen1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (Test.QuickCheck.Gen.listOf3
                   @ GHC.Types.Char
                   Tests.puzzleGen2) -}
500e71b7bc56594a2e795ccead8f4cb8
  puzzleGen :: Test.QuickCheck.Gen.Gen Main.Puzzle
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,1*U(U)>m,
     Unfolding: InlineRule (0, True, True)
                Tests.puzzleGen1
                  `cast`
                (Sym (Test.QuickCheck.Gen.N:Gen[0] <Main.Puzzle>_R)) -}
fb1c0b84f40402bf5dbf13ca7dbcab8f
  puzzleGen1 ::
    Test.QuickCheck.Random.QCGen -> GHC.Types.Int -> Main.Puzzle
  {- Arity: 2, Strictness: <L,1*U(U,U,U,1*U,A,A)><L,1*U(U)>m,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Test.QuickCheck.Random.QCGen) (w1 :: GHC.Types.Int) ->
                 Main.Puzzle
                   (case w1 of ww { GHC.Types.I# ww1 ->
                    Test.QuickCheck.Gen.$wlistOf1
                      @ GHC.Types.Char
                      Tests.puzzleGen2
                      (case w `cast`
                            (Test.QuickCheck.Random.N:QCGen[0]) of ww2 { System.Random.TF.Gen.TFGen ww3 ww4 ww5 ww6 ww7 ww8 ->
                       case System.Random.TF.Gen.$wtfGenSplit
                              ww3
                              ww4
                              ww5
                              ww6 of ww9 { (#,#) ww10 ww11 ->
                       ww10 `cast` (Sym (Test.QuickCheck.Random.N:QCGen[0])) } })
                      ww1 })
                   (GHC.Types.[] @ (GHC.Base.Maybe GHC.Types.Char))
                   (GHC.Types.[] @ GHC.Types.Char)) -}
0a35cd7fc71fb24c163683b0018cc5b3
  puzzleGen2 :: Test.QuickCheck.Gen.Gen GHC.Types.Char
  {- Unfolding: (Test.QuickCheck.Gen.elements
                   @ GHC.Types.Char
                   Tests.puzzleGen3) -}
76a180811f4ddb16d95cc3f4c5772ffa
  puzzleGen3 :: GHC.Base.String
  {- Unfolding: (GHC.Enum.eftChar 97# 122#) -}
21ef5dec4ae4caf3e3bfa01d917e1dfc
  test :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Tests.test1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
10a2b2bf8900528294053cfb8591e518
  test1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case Test.Hspec.Core.Runner.hspec2
                        Test.Hspec.Core.Options.defaultConfig
                        Tests.test2
                          `cast`
                        (Trans
                             (Sym (GHC.Types.N:IO[0]
                                       <((), [Test.Hspec.Core.Tree.SpecTree ()])>_R))
                             (Trans
                                  (Sym (Control.Monad.Trans.Writer.Lazy.N:WriterT[0]
                                            <[Test.Hspec.Core.Tree.SpecTree ()]>_N
                                            <GHC.Types.IO>_R
                                            <()>_N))
                                  (Sym (Test.Hspec.Core.Spec.Monad.N:SpecM[0] <()>_N) <()>_N)))
                        eta of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { Test.Hspec.Core.Runner.Summary ds ds2 ->
                 case ds2 of wild1 { GHC.Types.I# x ->
                 case x of wild2 {
                   DEFAULT -> System.Exit.die2 @ () ipv
                   0# -> (# ipv, GHC.Tuple.() #) } } } }) -}
33cbef998be363698f8c871548920122
  test10 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Tests.test48
                   Tests.test37
                   GHC.Types.False
                   Tests.test11
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
33c26f2c5624f50e4128580e280db47e
  test100 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Tests.test101) -}
7ecae70f59799d674bc76fff9aeaa814
  test101 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Tests.test102) -}
b59859fabc85836eaa6d8c8a5ed16345
  test102 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Tests.test36
                   Tests.test103
                   GHC.Stack.Types.EmptyCallStack) -}
23879de65da9b5d8cef1e7083ee78e53
  test103 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Tests.test35
                   Tests.test34
                   Tests.test33
                   Tests.test106
                   Tests.test31
                   Tests.test105
                   Tests.test104) -}
af0b4080e4e792f6309d992a39052cb6
  test104 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 72#) -}
3856e49818bd675ecfafe2f248695919
  test105 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 25#) -}
077072fd9bb2d7defb1a8654189a3fe4
  test106 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 24#) -}
b807b64d3e5d08918a3de469558e6d54
  test107 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Tests.test108
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
29238ea685a685904d5452eedac1a7d9
  test108 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Tests.test109) -}
bbd75896eec99ffd2349fc62031ef98c
  test109 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Tests.test110) -}
eebb14edf2b3c05b7cf0fbc6689264af
  test11 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Tests.test12) -}
010324736d6fee58bb5dc3fe15cf75d1
  test110 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Tests.test111) -}
545d39eb8327c81e1beb6d27e722fdb0
  test111 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Tests.test112) -}
6ff6067b9a611c9ac7b87a3e55f0153e
  test112 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Tests.test47
                   Tests.test113
                   GHC.Stack.Types.EmptyCallStack) -}
598deb69ede2c1f66d39543eccbaf7fe
  test113 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Tests.test35
                   Tests.test34
                   Tests.test33
                   Tests.test115
                   Tests.test45
                   Tests.test115
                   Tests.test114) -}
0d9795380c6a1a13709d45c0757dd20c
  test114 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 32#) -}
33537458f65ec3c3cd7747532400397f
  test115 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 23#) -}
ac46698d4cc684ead54f807af632af97
  test116 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test118
                   Tests.test117) -}
3de8c62a6caf2ed011d3936b4eda0bd0
  test117 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dds correct guess"#) -}
275af117203417467c7f17068c38a745
  test118 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'a'#) -}
f67445264f1f498d93365952d742e100
  test119 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test121
                   Tests.test120) -}
5d72dd72bb4922fc09bf7be916a92a5b
  test12 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Tests.test24
                   (GHC.Types.[] @ GHC.Types.Char)
                   Tests.test23
                   Tests.test13) -}
c85cdf83d6d40ea812d3858a584cea3c
  test120 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "illInCharacter"#) -}
b850e6ca978817bf4fcf7feba3d8ce36
  test121 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'f'#) -}
7ca3d0c37889c3c1877d42d43371d738
  test13 :: Main.Puzzle
  {- Unfolding: (Main.Puzzle
                   Tests.test21
                   Tests.test17
                   Tests.test14) -}
95fcc866b3eddbc411b05033006d67fb
  test14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test16
                   Tests.test15) -}
e517f7d3ca85ac195a3c67d5796edc18
  test15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "w"#) -}
c860dd5e8378e0b525ff89558df478d1
  test16 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'w'#) -}
d80204293187f1718369b37f2508de19
  test17 :: [GHC.Base.Maybe GHC.Types.Char]
  {- Unfolding: (GHC.List.zipWith
                   @ GHC.Types.Char
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   Tests.test22
                   Tests.test21
                   Tests.test18) -}
953f0d6c12644f45201fad9a1aad86e4
  test18 :: [GHC.Base.Maybe GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   Tests.test20
                   Tests.test19) -}
28ac559c59c17cbc8f6cd8f3f1eab4e0
  test19 :: [GHC.Base.Maybe GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Char)
                   (GHC.Types.[] @ (GHC.Base.Maybe GHC.Types.Char))) -}
ff6f9c4a445c13ee50c494a35dcf2ddf
  test2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((),
           [Test.Hspec.Core.Tree.Tree
              (Test.Hspec.Core.Example.ActionWith ())
              (Test.Hspec.Core.Tree.Item ())]) #)
  {- Arity: 1,
     Unfolding: (\ (eta :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 (# eta, Tests.test3 #)) -}
80657d6ef9bc0c526582a4f7e7fc0f5f
  test20 :: GHC.Base.Maybe GHC.Types.Char
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Char Tests.test16) -}
33081c2d12c9f14b54561855d0bd26d3
  test21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wa"#) -}
19f2c5bb07dd249c5c71ce0424e7b918
  test22 ::
    GHC.Types.Char
    -> GHC.Base.Maybe GHC.Types.Char -> GHC.Base.Maybe GHC.Types.Char
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (wordChar :: GHC.Types.Char)
                   (guessChar :: GHC.Base.Maybe GHC.Types.Char)[OneShot] ->
                 case wordChar of wild { GHC.Types.C# x ->
                 case x of wild1 {
                   DEFAULT -> guessChar
                   'w'# -> GHC.Base.Just @ GHC.Types.Char wild } }) -}
0cabeb65032b8aef6aadfb86531dc34a
  test23 :: Main.Puzzle
  {- Unfolding: (Main.Puzzle
                   Tests.test21
                   Tests.test18
                   Tests.test15) -}
c79628182b907bd968c2b0e5f1f26f90
  test24 ::
    GHC.Base.String
    -> Main.Puzzle -> Main.Puzzle -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ Main.Puzzle
                   Tests.test25
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$fEqPuzzle
                   Main.$fShowPuzzle) -}
6f734d3b80a3f1a5050b1f786a86ee5c
  test25 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Tests.test26) -}
185f4c275627d68149de2e45a55ecf99
  test26 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Tests.test27) -}
545f8d5529fe1087b1a80672d23e5031
  test27 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Tests.test36
                   Tests.test28
                   GHC.Stack.Types.EmptyCallStack) -}
e7f13924987ce962b22b867a5fbd26bf
  test28 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Tests.test35
                   Tests.test34
                   Tests.test33
                   Tests.test32
                   Tests.test31
                   Tests.test30
                   Tests.test29) -}
587c8151aa3a6f0370da08a02877098b
  test29 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 63#) -}
939e3c008203b91c1fd78ef7081145d5
  test3 ::
    ((),
     [Test.Hspec.Core.Tree.Tree
        (Test.Hspec.Core.Example.ActionWith ())
        (Test.Hspec.Core.Tree.Item ())])
  {- Unfolding: ((GHC.Tuple.(), Tests.test4)) -}
2a8e43da6b7cb5825695f583fda4bdac
  test30 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 31#) -}
f31e512353c51bbcd7aeca08328fa035
  test31 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 13#) -}
a71cdd3da237c9e47a9de3e8818a2228
  test32 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 30#) -}
ff10c0600f33d70d12279abe1ba6feb8
  test33 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "src/Tests.hs"#) -}
e7c89551023589277a6f7a806f64df25
  test34 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Tests"#) -}
20d57bb44870a821c7f4400b00f9f203
  test35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "hangman-0.1.0.0-ou6S4UrYm4DGSzhNnfCda"#) -}
c750671ac0c370e10b519efda305c42f
  test36 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "shouldBe"#) -}
4fde99dfc9f0cff3a26a40c4d8ab21d5
  test37 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Tests.test38
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
675e996169db4a8e57ff15a5ace37e83
  test38 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Tests.test39) -}
ea319c9b64f6b215124fa7c4e1b592af
  test39 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Tests.test40) -}
dc76ed3fd52f14567bec3d9007833cf6
  test4 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Tests.test5
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.Tree
                           (Test.Hspec.Core.Example.ActionWith ())
                           (Test.Hspec.Core.Tree.Item ())))) -}
eb2298277935876a0a5ed897c22badb7
  test40 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Tests.test41) -}
bb27140e624df13435559adc78da67d7
  test41 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Tests.test42) -}
a10291ed63071389164b9027f470520a
  test42 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Tests.test47
                   Tests.test43
                   GHC.Stack.Types.EmptyCallStack) -}
da42501cd9a271ecffcc27ed56feedec
  test43 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Tests.test35
                   Tests.test34
                   Tests.test33
                   Tests.test46
                   Tests.test45
                   Tests.test46
                   Tests.test44) -}
96f11d72146a8ed0aa919c15fa44d08c
  test44 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 48#) -}
fb91d05654261a650b44d9a0ac7a9098
  test45 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 9#) -}
c45dfc22763ae9be2c5f49ce10f43dd4
  test46 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 29#) -}
2220b71cba64da22b7437edfa514323d
  test47 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "it"#) -}
52d9a63313f3457b02c4ca665cf103df
  test48 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test50
                   Tests.test49) -}
0b50e2423c4555ef854492d65fddeb35
  test49 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "oesn't add previous correct guess"#) -}
e3b56471f0b3e36ee8c1800f214c7850
  test5 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith ())
      (Test.Hspec.Core.Tree.Item ())
  {- Unfolding: (Test.Hspec.Core.Tree.Node
                   @ (Test.Hspec.Core.Example.ActionWith ())
                   @ (Test.Hspec.Core.Tree.Item ())
                   Tests.test119
                   Tests.test6) -}
794487602a08ab3763efd8468e01ca6c
  test50 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'd'#) -}
991b459c4c7f975b3721559d930efb0d
  test51 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Tests.test52
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
47b51149d0584da186b3fab5493c0a1a
  test52 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Tests.test53) -}
e781bb4da29603e10f01d4b6355c2a39
  test53 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Tests.test81
                   Tests.test72
                   GHC.Types.False
                   Tests.test54
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
959c59abf7f9a14196d06752837399e4
  test54 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Tests.test55) -}
67afe69a6d2983e9d8a06fd1dbf90fdb
  test55 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Tests.test64
                   (GHC.Types.[] @ GHC.Types.Char)
                   Tests.test62
                   Tests.test56) -}
c40deaba79e11db3258a2da1f578fff9
  test56 :: Main.Puzzle
  {- Unfolding: (Main.Puzzle
                   Tests.test15
                   Tests.test59
                   Tests.test57) -}
e689268d40c7acecec3f43c1b0f8b36e
  test57 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test58
                   Tests.test15) -}
daf927cc0b4e671b2909605bfc1af881
  test58 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'z'#) -}
890134f25f11cde6e274e6604df6b85e
  test59 :: [GHC.Base.Maybe GHC.Types.Char]
  {- Unfolding: (GHC.List.zipWith
                   @ GHC.Types.Char
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   Tests.test61
                   Tests.test15
                   Tests.test60) -}
41ab64fc70d4ebd6722f1f64aafb2040
  test6 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Tests.test83
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Tests.test7) -}
7b641e69b84836fa5299e9f37db94500
  test60 :: [GHC.Base.Maybe GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   Tests.test20
                   (GHC.Types.[] @ (GHC.Base.Maybe GHC.Types.Char))) -}
6cdc33b969ccd41dc69c55834ae51140
  test61 ::
    GHC.Types.Char
    -> GHC.Base.Maybe GHC.Types.Char -> GHC.Base.Maybe GHC.Types.Char
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (wordChar :: GHC.Types.Char)
                   (guessChar :: GHC.Base.Maybe GHC.Types.Char)[OneShot] ->
                 case wordChar of wild { GHC.Types.C# x ->
                 case x of wild1 {
                   DEFAULT -> guessChar
                   'z'# -> GHC.Base.Just @ GHC.Types.Char wild } }) -}
2e0cb30abdb42fe6881c30f10263be06
  test62 :: Main.Puzzle
  {- Unfolding: (Main.Puzzle
                   Tests.test15
                   Tests.test60
                   Tests.test63) -}
95c0a49ca3542224b62e0f6c4792bcfd
  test63 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "wz"#) -}
d93dbcfac96740f4878d0e51dc3e7c2a
  test64 ::
    GHC.Base.String
    -> Main.Puzzle -> Main.Puzzle -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ Main.Puzzle
                   Tests.test65
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$fEqPuzzle
                   Main.$fShowPuzzle) -}
2280ac386e8b2401dd552e16acf56be8
  test65 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.HUnit.Base.@=?5
                   Test.HUnit.Base.@?=1
                   Tests.test66) -}
3af4028c39375a80d0b9024b779ae441
  test66 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Expectations.shouldBe5
                   Test.Hspec.Expectations.shouldBe1
                   Tests.test67) -}
1ac838acf3853561648d70582bd2995b
  test67 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Tests.test36
                   Tests.test68
                   GHC.Stack.Types.EmptyCallStack) -}
2985d00acfe1c071a60c4e480f208408
  test68 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Tests.test35
                   Tests.test34
                   Tests.test33
                   Tests.test71
                   Tests.test31
                   Tests.test70
                   Tests.test69) -}
8092877ea8964068fd27121b14395bcb
  test69 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 54#) -}
92ee5d000a7f07715e2bcaa180a0079f
  test7 ::
    [Test.Hspec.Core.Tree.Tree
       (Test.Hspec.Core.Example.ActionWith ())
       (Test.Hspec.Core.Tree.Item ())]
  {- Unfolding: (GHC.Base.++
                   @ (Test.Hspec.Core.Tree.Tree
                        (Test.Hspec.Core.Example.ActionWith ())
                        (Test.Hspec.Core.Tree.Item ()))
                   Tests.test51
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R
                   Tests.test8
                     `cast`
                   ([(Test.Hspec.Core.Tree.Tree
                        (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])
                         ->_R <GHC.Types.IO ()>_R)
                        (Test.Hspec.Core.Tree.Item
                           (Sub (Test.Hspec.Core.Example.D:R:ArgIO[0])))_R)_R])_R) -}
8790d287ce6f97361b36238bbeb90438
  test70 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 28#) -}
872bedf7cfdb6aede2af0a51aca65a78
  test71 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 27#) -}
1fa3dcccdd66ff39156affbbee7cef8b
  test72 :: GHC.Base.Maybe Test.Hspec.Core.Example.Location
  {- Unfolding: (case GHC.List.reverse1
                        @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)
                        Tests.test73
                        (GHC.Types.[]
                           @ (GHC.Base.String, GHC.Stack.Types.SrcLoc)) of wild {
                   [] -> GHC.Base.Nothing @ Test.Hspec.Core.Example.Location
                   : ds ds1
                   -> case ds of wild2 { (,) ds2 loc ->
                      GHC.Base.Just
                        @ Test.Hspec.Core.Example.Location
                        (Test.Hspec.Core.Example.Location
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds3 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds6 })
                           (case loc of wild1 { GHC.Stack.Types.SrcLoc ds4 ds5 ds3 ds6 ds7 ds8 ds9 ->
                            ds7 })
                           Test.Hspec.Core.Example.ExactLocation) } }) -}
a5255eb7ec197fcfc8e636c8a0b111c2
  test73 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (Data.CallStack.$wunsafeDrop
                   @ ([GHC.Types.Char], GHC.Stack.Types.SrcLoc)
                   1#
                   Tests.test74) -}
3f1c043cc65c846cfe17fc194e070432
  test74 :: [([GHC.Types.Char], GHC.Stack.Types.SrcLoc)]
  {- Unfolding: (GHC.Stack.Types.getCallStack Tests.test75) -}
ff7ae90c786ac4fd88092c5316a69c48
  test75 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Tree.specItem9
                   Test.Hspec.Core.Tree.specItem2
                   Tests.test76) -}
ed13281416d89a0c4180daf9f768ce73
  test76 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Test.Hspec.Core.Spec.it9
                   Test.Hspec.Core.Spec.it2
                   Tests.test77) -}
6cb84e4a0e6756b8d58f17dbb86bed76
  test77 :: GHC.Stack.Types.CallStack
  {- Unfolding: (GHC.Stack.Types.PushCallStack
                   Tests.test47
                   Tests.test78
                   GHC.Stack.Types.EmptyCallStack) -}
135380d7cc180415cd456571abaabea0
  test78 :: GHC.Stack.Types.SrcLoc
  {- Unfolding: (GHC.Stack.Types.SrcLoc
                   Tests.test35
                   Tests.test34
                   Tests.test33
                   Tests.test80
                   Tests.test45
                   Tests.test80
                   Tests.test79) -}
571246042161ed391aa6664f6a5ae906
  test79 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 41#) -}
7bf230df700c420bbddfd8b5cd1c97bc
  test8 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Tests.test9
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
ed3988ea6d5ba697de8cd08df4716747
  test80 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 26#) -}
c580acceed49f6b6579acc64f993295e
  test81 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test50
                   Tests.test82) -}
0ed32066b46f52d67411d1e997ec3b35
  test82 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "oesn't add incorrect guess"#) -}
8dd20acd36a53ce9a8438074ff7f28e6
  test83 ::
    [Test.Hspec.Core.Tree.SpecTree
       (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)]
  {- Unfolding: (GHC.Types.:
                   @ (Test.Hspec.Core.Tree.SpecTree
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Tests.test84
                   (GHC.Types.[]
                      @ (Test.Hspec.Core.Tree.SpecTree
                           (Test.Hspec.Core.Example.Arg
                              Test.Hspec.Expectations.Expectation)))) -}
43059409a432a84a83cb1cc2d09c065b
  test84 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Tests.test85) -}
406a2b9e45855fa53f7c0a1ed45a9637
  test85 ::
    Test.Hspec.Core.Tree.Item
      (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
  {- Unfolding: (Test.Hspec.Core.Tree.Item
                   @ (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                   Tests.test116
                   Tests.test107
                   GHC.Types.False
                   Tests.test86
                     `cast`
                   (<Test.Hspec.Core.Example.Params>_R
                    ->_R <Test.Hspec.Core.Example.ActionWith
                            (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
                          -> GHC.Types.IO ()>_R
                    ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                    ->_R Sym (GHC.Types.N:IO[0]
                                  <Data.Either.Either
                                     GHC.Exception.SomeException
                                     Test.Hspec.Core.Example.Result>_R))) -}
16f32d049130127ba6e1080fb9a5b731
  test86 ::
    Test.Hspec.Core.Example.Params
    -> (Test.Hspec.Core.Example.ActionWith
          (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation)
        -> GHC.Types.IO ())
    -> Test.Hspec.Core.Example.ProgressCallback
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Either.Either
            GHC.Exception.SomeException Test.Hspec.Core.Example.Result #)
  {- Arity: 4,
     Unfolding: (Test.Hspec.Core.Example.safeEvaluateExample1
                   @ Test.Hspec.Expectations.Expectation
                   Test.Hspec.Core.Example.$fExampleIO1
                     `cast`
                   (Trans
                        (<Test.Hspec.Expectations.Expectation>_R
                         ->_R <Test.Hspec.Core.Example.Params>_R
                         ->_R ((Trans
                                    (Sub (Test.Hspec.Core.Example.D:R:Arg(->)0[0] <()>_N))
                                    (Sub (Sym (Test.Hspec.Core.Example.D:R:ArgIO[0])))
                                ->_R <GHC.Types.IO ()>_R)
                               ->_R <GHC.Types.IO ()>_R)
                         ->_R <Test.Hspec.Core.Example.ProgressCallback>_R
                         ->_R Sym (GHC.Types.N:IO[0] <Test.Hspec.Core.Example.Result>_R))
                        (Sym (Test.Hspec.Core.Example.N:Example[0]
                                  <Test.Hspec.Expectations.Expectation>_N)))
                   Tests.test87) -}
be27647c38d9f68e726b57dbf6a24605
  test87 :: Test.HUnit.Lang.Assertion
  {- Unfolding: (Tests.test99
                   (GHC.Types.[] @ GHC.Types.Char)
                   Tests.test96
                   Tests.test88) -}
32795442b83e58955c58be0ffa708877
  test88 :: Main.Puzzle
  {- Unfolding: (Main.Puzzle
                   Tests.test94
                   Tests.test91
                   Tests.test89) -}
fc2f8f89a2048d059c967caf4e90f8c5
  test89 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   Tests.test90
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9d00fc5a9ff82fe338caa1ed80fb7be5
  test9 ::
    Test.Hspec.Core.Tree.Tree
      (Test.Hspec.Core.Example.ActionWith
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
      (Test.Hspec.Core.Tree.Item
         (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
  {- Unfolding: (Test.Hspec.Core.Tree.Leaf
                   @ (Test.Hspec.Core.Example.ActionWith
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   @ (Test.Hspec.Core.Tree.Item
                        (Test.Hspec.Core.Example.Arg Test.Hspec.Expectations.Expectation))
                   Tests.test10) -}
aae594dae0e12d06671b18611ffa9b32
  test90 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 's'#) -}
e0faed9675259c0f6e47dbd9808b3735
  test91 :: [GHC.Base.Maybe GHC.Types.Char]
  {- Unfolding: (GHC.List.zipWith
                   @ GHC.Types.Char
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   Tests.test95
                   Tests.test94
                   Tests.test92) -}
485c4d7c09b54f28e17c9f85e68bfc96
  test92 :: [GHC.Base.Maybe GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Char)
                   Tests.test93) -}
433f4879d6e502ca7fe0b6705a5308ab
  test93 :: [GHC.Base.Maybe GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Types.Char)
                   Tests.test19) -}
8eb1e56cc97ab95d45d6d9f80dc59e59
  test94 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sam"#) -}
33d3fd2c01cb895596ab9e2312d9ec31
  test95 ::
    GHC.Types.Char
    -> GHC.Base.Maybe GHC.Types.Char -> GHC.Base.Maybe GHC.Types.Char
  {- Arity: 2, HasNoCafRefs,
     Unfolding: (\ (wordChar :: GHC.Types.Char)
                   (guessChar :: GHC.Base.Maybe GHC.Types.Char)[OneShot] ->
                 case wordChar of wild { GHC.Types.C# x ->
                 case x of wild1 {
                   DEFAULT -> guessChar
                   's'# -> GHC.Base.Just @ GHC.Types.Char wild } }) -}
342b901b15466dc83ba491a563633125
  test96 :: Main.Puzzle
  {- Unfolding: (Main.Puzzle
                   Tests.test94
                   Tests.test97
                   (GHC.Types.[] @ GHC.Types.Char)) -}
2f6e423b0fcbc40891eef5fb3f676963
  test97 :: [GHC.Base.Maybe GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.Maybe GHC.Types.Char)
                   Tests.test98
                   Tests.test93) -}
00ceed6f936dde6663144b54025d090d
  test98 :: GHC.Base.Maybe GHC.Types.Char
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Char Tests.test90) -}
0e1ad2e01315cf710206f290c555f57f
  test99 ::
    GHC.Base.String
    -> Main.Puzzle -> Main.Puzzle -> Test.HUnit.Lang.Assertion
  {- Unfolding: (Test.HUnit.Lang.assertEqual
                   @ Main.Puzzle
                   Tests.test100
                     `cast`
                   (Sym (GHC.Classes.N:IP[0]
                             <"callStack">_N <GHC.Stack.Types.CallStack>_N))
                   Main.$fEqPuzzle
                   Main.$fShowPuzzle) -}
instance Test.QuickCheck.Arbitrary.Arbitrary [Main.Puzzle]
  = Tests.$fArbitraryPuzzle
"SPEC/Tests $dmshrink @ Puzzle" [ALWAYS] forall ($dArbitrary :: Test.QuickCheck.Arbitrary.Arbitrary
                                                                  Main.Puzzle)
  Test.QuickCheck.Arbitrary.$dmshrink @ Main.Puzzle $dArbitrary
  = Tests.$fArbitraryPuzzle_$s$dmshrink
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

